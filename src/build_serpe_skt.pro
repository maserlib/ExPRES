;+
; ***********************************************************
; ***                                                     ***
; ***         ExPRES V1.0		                 ***
; ***                                                     ***
; ***********************************************************
; ***                                                     ***
; ***       MODULE: BUILD_SERPE_SKT                       ***
; ***                                                     ***
; ***.....................................................***
; ***     function: BUILD_SERPE_SKT;                      ***
; ***          Builds the CDF files skeleton		  ***
; ***                                                     ***
; ***********************************************************
;
; :Author:
;    Corentin Louis, Baptiste Cecconi
;
; :History:
;    V0.6.1: First Release
;-

;+
; PRO BUILD_SERPE_SKT
;
; :Param:
;    Frequency: in, required, type=fltarr
;        List of frequency values of the spectral axis
;    Freq_Label: in, required, type=string
;        
;    FLog: in, required, type=int
;        Flag for logscale frequency axis
;    Src_Id_Lable: in, required, type=strarr
;        List of labels for each source
;    OriginSrc: in, required, type=strarr
;        Flag providing the origin of the source (planet or satellite)
;    HemisphereE: in, required, type=strarr
;        
;    B_Model: in, required, type=strarr
;        Name of the magnetic field model in use
;    SourceType: in, required, type=strarr
;        
;    Observer: in, required, type=strarr
;        Name of the observer
;    Planet: in, required, type=strarr
;        Name of the planet
;    Wid: in, requirted, type=fltarr
;        Width of the emission layer in degree
;    Ener: in, required, type=fltarr
;        Energy of the instable electron population
;    Refr: in, required, type=intarr
;        Flag for refraction
;    SourceDescr: in,required, type=strarr
;        Source description 
;    Dt: in, required, type=float
;        Time interval between spectra
;    DateD: in, required, type=float
;        Date at begining of interval
;    DateF: in, required, type=float
;        Date at end of interval
;    File: in, required, type=string
;        File name
;    Option: in, required, type=structure
;        Contains output options (i.e., which parameters will be put in the CDF file) 
;
;-

PRO BUILD_SERPE_SKT,frequency,Freq_Label,Flog,Src_ID_Label,originsrc,hemisphere,b_model,sourcetype,$
    observer,planet,wid,ener,mode,refr,sourcedescr,dt,dated,datef,file,option,version
; Check if input parameters 'file' is set. Create new file name, if not set; remove previous one (if it exist) if set. 
if ~keyword_set(file) then begin
	file=string(format='(I12.12)',long(systime(1)))+'.skt'
endif else begin 
	if file_test(file) then spawn,'rm -rf '+file
endelse

; Size of arrays and strings
nf = n_elements(frequency)
nfs = max(strlen(Freq_Label))
ns = n_elements(Src_ID_Label)
nss = max(strlen(Src_ID_Label))
nhemi=n_elements(hemisphere)
nhemis=max(strlen(hemisphere))

; Open file in write mode and output ASCII lines
openw,lun,file,/get_lun

printf,lun,"! Skeleton table for the ""expres_obs_planet_origin_beam-wid_e_refraction_YYYYMMDD_"+version+""" CDF."
printf,lun,"! Generated: "+systime()
printf,lun,"! CDF created/modified by CDF V3.6.2"
printf,lun,"! Skeleton table created by CDF V3.6.2_1"
printf,lun,""
printf,lun,"#header"
printf,lun,""
printf,lun,"                       CDF NAME: expres_obs_planet_origin_beam-wid_e_refraction_YYYYMMDD_"+version
printf,lun,"                  DATA ENCODING: PPC"
printf,lun,"                       MAJORITY: ROW"
printf,lun,"                         FORMAT: SINGLE"
printf,lun,""
printf,lun,"! Variables  G.Attributes  V.Attributes  Records  Dims  Sizes"
printf,lun,"! ---------  ------------  ------------  -------  ----  -----"
printf,lun,"    0/16          25            34         0/z      0"
printf,lun,"! CDF_COMPRESSION: None"
printf,lun,"! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"! CDF_CHECKSUM: MD5"
printf,lun,"! (Valid checksum: None, MD5)"
printf,lun,"! CDF_LEAPSECONDLASTUPDATED: 20150701"
printf,lun,""
printf,lun,""
printf,lun,"#GLOBALattributes"
printf,lun,""
printf,lun,"! Attribute         Entry       Data"
printf,lun,"! Name              Number      Type       Value"
printf,lun,"! ---------         ------      ----       -----"
printf,lun,""
printf,lun,"  ""Project""             1:    CDF_CHAR     { ""PADC"" }"
printf,lun,"                        2:    CDF_CHAR     { ""MASER"" } ."
printf,lun,""
printf,lun,""
printf,lun,""
printf,lun,"  ""Source_name""         1:    CDF_CHAR     { ""ExPRES"" } ."
printf,lun,""
printf,lun,"  ""Discipline""          1:    CDF_CHAR     { ""Space "" -"
printf,lun,"                                             ""Physics>Magnetospheric "" -"
printf,lun,"                                             ""Science"" } ."
printf,lun,""
printf,lun,"  ""Data_type""           1:    CDF_CHAR     { """+strlowcase(observer[0])+"_"+strlowcase(planet[0])+"_"+strlowcase(originsrc[0])+""" } ."
printf,lun,""
printf,lun,"  ""Descriptor""          1:    CDF_CHAR     { """+strlowcase(b_model[0])+"_"+sourcetype[0]+"-"+wid[0]+"_"+strlowcase(ener[0])+strlowcase(mode[0])+refr[0]+""" } ."
printf,lun,""
printf,lun,"  ""File_naming_convention"""
printf,lun,"                        1:    CDF_CHAR     { "" source_datatype_descriptor_yyyyMMdd"" } ."
printf,lun,""
printf,lun,"  ""Data_version""        1:    CDF_CHAR     { ""01"" } ."
printf,lun,""
printf,lun,"  ""PI_name""             1:    CDF_CHAR     { ""Baptiste Cecconi"" } ."
printf,lun,""
printf,lun,"  ""PI_affiliation""      1:    CDF_CHAR     { ""LESIA, Observatoire de Paris"" } ."
printf,lun,""
printf,lun,"  ""TEXT""                1:    CDF_CHAR     { "" ExPRES (Exoplanetary and Planetary Radio Emission Simulator) is able to reproduce "" -"
printf,lun,"												"" the observations of planetary and exoplanetary CMI-generated radio emissions "" -"
printf,lun,"												"" in the time-frequency plane "" } ."
printf,lun,""
printf,lun,"  ""Instrument_type""     1:    CDF_CHAR     { ""Model"" } ."
printf,lun,""
printf,lun,"  ""Mission_group""       1:    CDF_CHAR     { ""MASER"" } ."
printf,lun,""
printf,lun,"  ""Logical_source""      1:    CDF_CHAR     { ""expres_"+strlowcase(observer[0])+"_"+strlowcase(planet[0])+"_"+strlowcase(originsrc[0])+""" } ."
printf,lun,""
printf,lun,"  ""Logical_file_id""     1:    CDF_CHAR     { "" "" } ."
printf,lun,""
printf,lun,"  ""Logical_source_description"""
printf,lun,"                        1:    CDF_CHAR     { ""ExPRES Simulation of "" -"
printf,lun,"                                             """+planet[0]+" "" -"
printf,lun,"											 """+sourcedescr[0]+" "" -"
printf,lun,"											 "" DAM radio emission observed from "+observer[0]+""" } ."
printf,lun,""
printf,lun,"  ""Time_resolution""		1:		CDF_CHAR	{"""+dt[0]+" seconds""} ."
printf,lun,""
printf,lun,"  ""Rules_of_use"" 			1:	CDF_CHAR	{ "" This MASER/ExPRES simulation is distributed under Creative Commons CC-BY-NC-SA licence. "" -"
printf,lun,"                                            "" It can be used for scientific purposes. "" -"
printf,lun,"											"" This data has been processed by the LESIA/PADC team which can be contacted for any question "" -"
printf,lun,"											"" or collaborated purposes (contact.maser@obspm.fr). "" -"
printf,lun,"											"" We kindly request the authors of any communications and publications using these data "" -"
printf,lun,"											"" to let us know about them,  include minimal citation to the reference below "" -"
printf,lun,"											"" and appropriate acknowledgements whenever needed. "" -"
printf,lun,"											"" Hess et al. (2017), ExPRES: a tool to simulate planetary and exoplanetary radio emissions, A&A "" } ."
printf,lun,""
printf,lun,"  ""Generated_by"" 		1:		CDF_CHAR	{""LESIA/ObsParis""} ."
printf,lun,""
caldat,systime(/julian),month,day,year,h,m,s
ticket=string(format='(I04,"-",I02,"-",I02,"T",I02,":",I02,":",I02)',year,month,day,h,m,s)
printf,lun,"  ""Generation_date""	1:		CDF_CHAR	{"""+ticket[0]+"""}	 ."
printf,lun,""
printf,lun,"  ""Acknowledgement"" 	1:		CDF_CHAR	{""The authors acknowledge the MASER (Measurement, Analysis and Simulations "" -"
printf,lun,"                                             ""of Emissions in Radio frequencies) project "" -"
printf,lun,"                                             ""and PADC (Paris Astronomical Data Centre) for providing access "" -"
printf,lun,"                                             ""to ExPRES simulations accessible online at http://maser.obspm.fr/data/expres/""}	."
printf,lun,""
printf,lun,"  ""MODS"" ."
printf,lun,""
printf,lun,"  ""ADID_ref"" ."
printf,lun,""
printf,lun,"  ""LINK_TEXT"" 		1:		CDF_CHAR	{""The ExPRES Tool and Data are available through the""}	."
printf,lun,""
printf,lun,"  ""LINK_TITLE"" 		1:		CDF_CHAR	{""MASER portal""}	."
printf,lun,""
printf,lun,"  ""HTTP_LINK"" 		1:		CDF_CHAR	{""http://maser.lesia.obspm.fr/outils-services/expres/""} ."
printf,lun,""
printf,lun,"  ""PDS_start_time""	1:		CDF_CHAR	{"""+dated[0]+"""} ."	
printf,lun,""
printf,lun,"  ""PDS_stop_time""	1:		CDF_CHAR	{"""+datef[0]+"""} ."	
printf,lun,""
printf,lun,"  ""PDS_Observation_target""	1:		CDF_CHAR	{"""+planet[0]+"""} ."	
printf,lun,""
printf,lun,"  ""PDS_Observation_type""	1:		CDF_CHAR	{""radio simulations""} ."	
printf,lun,""
printf,lun,"  ""VESPA_spectral_range_min""	1:		CDF_CHAR	{"""+strtrim(min(frequency)*10e6,1)+"""} ."	
printf,lun,""
printf,lun,"  ""VESPA_spectral_range_max""	1:		CDF_CHAR	{"""+strtrim(max(frequency)*10e6,1)+"""} ."	
printf,lun,""
printf,lun,"  ""VESPA_spectral_sampling_step_min""	1:		CDF_CHAR	{"""+strtrim(min(frequency(1:nf-1)-frequency(0:nf-2))*10e6,1)+"""} ."	
printf,lun,""
printf,lun,"  ""VESPA_spectral_sampling_step_max""	1:		CDF_CHAR	{"""+strtrim(max(frequency(1:nf-1)-frequency(0:nf-2))*10e6,1)+"""} ."	
printf,lun,""
printf,lun,"  ""VESPA_time_sampling_step""			1:		CDF_CHAR	{"""+strtrim(dt[0],1)+"""} ."
printf,lun,""
printf,lun,"  ""VESPA_dataproduct_type""			1:		CDF_CHAR	{""DS>Dynamic Spectrum""} ."
printf,lun,""
if planet[0] eq originsrc[0] then begin
printf,lun,"  ""VESPA_target_name""			1:		CDF_CHAR	{"""+planet[0]+"""} ."
endif else begin
printf,lun,"  ""VESPA_target_name""			1:		CDF_CHAR	{"""+planet[0]+"#"+sourcedescr[0]+"""} ."
endelse
printf,lun,""
if planet[0] eq originsrc[0] then begin
	printf,lun,"  ""VESPA_target_class""			1:		CDF_CHAR	{""planet""} ."
endif else begin
	printf,lun,"  ""VESPA_target_class""			1:		CDF_CHAR	{""planet#satellite""} ."
endelse
printf,lun,""
printf,lun,"  ""VESPA_target_region""			1:		CDF_CHAR	{""Magnetosphere#Aurora""} ."
printf,lun,""
printf,lun,"  ""VESPA_feature_name""			1:		CDF_CHAR	{""Decametric radio emissions (DAM)""} ."
printf,lun,""
printf,lun,"  ""VESPA_instrument_host_name""			1:		CDF_CHAR	{"""+observer[0]+"""} ."
printf,lun,""
printf,lun,"  ""VESPA_instrument_name""			1:		CDF_CHAR	{""ExPRES""} ."
printf,lun,""
printf,lun,"  ""VESPA_measurement_type""			1:		CDF_CHAR	{""pos;src;meta.modelled;em.radio""} "
printf,lun," 							2:		CDF_CHAR	{""phys.polarization;src;meta.modelled;em.radio""} ."
printf,lun,""
printf,lun,"  ""VESPA_access_format""			1:		CDF_CHAR	{""application/x-cdf""} ."
printf,lun,""
printf,lun,"  ""VESPA_bib_reference""			1:		CDF_CHAR	{""AA/2016/28787""} ."
printf,lun,""
printf,lun,"  ""VESPA_publisher""			1:		CDF_CHAR	{""LESIA/MASER/PADC""} ."
printf,lun,""
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Origin""      1:    CDF_CHAR     { """+originsrc[0]+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Origin""      1:    CDF_CHAR     { """+originsrc[0]+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+originsrc[i]+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+originsrc[i]+""" } "
		endelse
	endfor
endelse
printf,lun,""
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Hemisphere""      1:    CDF_CHAR     { """+hemisphere[0]+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Hemisphere""      1:    CDF_CHAR     { """+hemisphere[0]+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+hemisphere[i]+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+hemisphere[i]+""" } "
		endelse
	endfor
endelse
printf,lun,""
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Type""      1:    CDF_CHAR     { """+sourcetype[0]+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Type""      1:    CDF_CHAR     { """+sourcetype[0]+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+sourcetype[i]+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+sourcetype[i]+""" } "
		endelse
	endfor
endelse
printf,lun,""
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Width""      1:    CDF_CHAR     { """+wid[0]+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Width""      1:    CDF_CHAR     { """+wid[0]+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+wid[i]+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+wid[i]+""" } "
		endelse
	endfor
endelse
printf,lun,""
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Energy""      1:    CDF_CHAR     { """+ener[0]+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Energy""      1:    CDF_CHAR     { """+ener[0]+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+ener[i]+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+ener[i]+""" } "
		endelse
	endfor
endelse
printf,lun,""
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Mode""      1:    CDF_CHAR     { """+mode[0]+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Mode""      1:    CDF_CHAR     { """+mode[0]+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+mode[i]+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+mode[i]+""" } "
		endelse
	endfor
endelse
printf,lun,""
if refr(0) eq '' then refr2='false' else refr2='true'
if ns eq 1 then begin
	printf,lun,"  ""SRP_Source_Refraction""      1:    CDF_CHAR     { """+refr2+""" } ."
endif else begin
	printf,lun,"  ""SRP_Source_Refraction""      1:    CDF_CHAR     { """+refr2+""" } "
	for i=1,ns-1 do begin 
		if i eq ns-1 then begin 
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+refr2+""" } ."
		endif else begin
			printf,lun,"                             "+string(i+1)+":    CDF_CHAR     { """+refr2+""" } "
		endelse
	endfor
endelse
printf,lun,""
printf,lun,"#VARIABLEattributes"
printf,lun,""
printf,lun,"  ""UCD"" 
printf,lun,"  ""SCALEMIN""
printf,lun,"  ""SCALEMAX""
printf,lun,"  ""CATDESC"""
printf,lun,"  ""DEPEND_0"""
printf,lun,"  ""DEPEND_1"""
printf,lun,"  ""DEPEND_2"""
printf,lun,"  ""DEPEND_3"""
printf,lun,"  ""DICT_KEY"""
printf,lun,"  ""DISPLAY_TYPE"""
printf,lun,"  ""FIELDNAM"""
printf,lun,"  ""FILLVAL"""
printf,lun,"  ""FORMAT"""
printf,lun,"  ""LABLAXIS"""
printf,lun,"  ""LABL_PTR_1"""
printf,lun,"  ""LABL_PTR_2"""
printf,lun,"  ""LABL_PTR_3"""
printf,lun,"  ""VALIDMIN"""
printf,lun,"  ""VALIDMAX"""
printf,lun,"  ""VAR_TYPE"""
printf,lun,"  ""SCALETYP"""
printf,lun,"  ""SCAL_PTR"""
printf,lun,"  ""VAR_NOTES"""
printf,lun,"  ""MONOTON"""
printf,lun,"  ""LEAP_SECONDS_INCLUDED"""
printf,lun,"  ""RESOLUTION"""
printf,lun,"  ""Bin_location"""
printf,lun,"  ""TIME_BASE"""
printf,lun,"  ""TIME_SCALE"""
printf,lun,"  ""REFERENCE_POSITION"""
printf,lun,"  ""ABSOLUTE_ERROR"""
printf,lun,"  ""RELATIVE_ERROR"""
printf,lun,"  ""FORM_PTR"""
printf,lun,"  ""UNITS"""
printf,lun,"  ""UNIT_PTR"""
printf,lun,""
printf,lun,""
printf,lun,"#variables"
printf,lun,""
printf,lun,"! No rVariables."
printf,lun,""
printf,lun,""
printf,lun,"#zVariables"
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Epoch""     CDF_TIME_TT2000     1       0              T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: 0000-01-01T00:00:00.000000000"
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""time.epoch"" }"
printf,lun,"    ""SCALEMIN""     	CDF_TIME_TT2000    { "+strtrim(dated,2)+".000000000 }"
printf,lun,"    ""SCALEMAX""     	CDF_TIME_TT2000     { "+strtrim(datef,2)+".000000000 }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Default time"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Epoch"" }"
printf,lun,"    ""FILLVAL"""
printf,lun,"              CDF_TIME_TT2000   { 9999-12-31T23:59:59.999999999 }"
printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Epoch"" }"
printf,lun,"    ""VALIDMIN"""
printf,lun,"              CDF_TIME_TT2000   { 1970-01-01T00:00:00.000000000 }"
printf,lun,"    ""VALIDMAX"""
printf,lun,"              CDF_TIME_TT2000   { 2039-12-31T23:59:59.999000000 }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""support_data"" }"
printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" }"
printf,lun,"    ""MONOTON""     CDF_CHAR     { ""INCREASE"" }"
printf,lun,"    ""TIME_BASE""   CDF_CHAR     { ""J2000"" }"
printf,lun,"    ""TIME_SCALE""  CDF_CHAR     { ""Terrestrial Time"" }"
printf,lun,"    ""REFERENCE_POSITION"""
printf,lun,"                  CDF_CHAR     { ""Rotating Earth Geoid"" }"
printf,lun,"    ""UNITS""       CDF_CHAR     { ""ns"" } ."
printf,lun,""
printf,lun,"  ! RV values were not requested."
printf,lun,""
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Frequency""     CDF_REAL4      1       1   "+strtrim(string(nf),2)+"        F         T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""em.freq"" }"
printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { "+strtrim(min(frequency),1)+" }"
printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { "+strtrim(max(frequency),1)+" }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Observation Frequency"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Frequency"" }"
printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Frequency"" }"
printf,lun,"    ""VALIDMIN""    CDF_REAL4    { "+strtrim(min(frequency),1)+" }"
printf,lun,"    ""VALIDMAX""    CDF_REAL4    { "+strtrim(max(frequency),1)+" }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""support_data"" }"
if flog eq 0 then $
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" }" $
	else printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""logarithm"" }"
printf,lun,"    ""UNITS""       CDF_CHAR     { ""MHz"" } ."
printf,lun,""
printf,lun,"  ! NRV values follow..."
printf,lun,""
for i=1,nf do printf,lun,"    ["+strtrim(string(i),2)+"] = "+strtrim(string(frequency[i-1]),2)
printf,lun,""
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Freq_Label""    CDF_CHAR      "+strtrim(string(nfs),2)+"       1   "+strtrim(string(nf),2)+"        F         T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: "" """
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""meta.id;em.freq"" }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Frequency Label"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Freq_Label"" }"
printf,lun,"    ""FORMAT""      CDF_CHAR     { ""A"+strtrim(string(nfs),2)+""" }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""metadata"" } ."
printf,lun,""
printf,lun,"  ! NRV values follow..."
printf,lun,""
for i=1,nf do printf,lun,"    ["+strtrim(string(i),2)+"] = { """+freq_label[i-1]+""" }"
printf,lun,""
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Src_ID_Label"""
printf,lun,"                  CDF_CHAR      "+strtrim(string(nss),2)+"       1    "+strtrim(string(ns),2)+"       F         T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: "" """
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""meta.id;src"" }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Source ID label"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Src_ID_Label"" }"
printf,lun,"    ""FORMAT""      CDF_CHAR     { ""A"+strtrim(string(nss),2)+""" }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""metadata"" } ."
printf,lun,""
printf,lun,"  ! NRV values follow..."
printf,lun,""
for i=1,ns do printf,lun,"    ["+strtrim(string(i),2)+"] = { """+strtrim(src_id_label[i-1])+""" }"
printf,lun,""
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Hemisphere_ID_Label"""
printf,lun,"                  CDF_CHAR      5       1    2       F         T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: "" """
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""meta.id;pos.bodyrc.lat"" }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Hemisphere ID label"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Hemisphere_ID_Label"" }"
printf,lun,"    ""FORMAT""      CDF_CHAR     { ""A5"" }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""metadata"" } ."
printf,lun,""
printf,lun,"  ! NRV values follow..."
printf,lun,""
printf,lun,"    [1] = { ""North"" }"
printf,lun,"    [2] = { ""South"" }"
printf,lun,""
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Src_Pos_Coord"""
printf,lun,"                  CDF_CHAR      1       1    3       F         T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: "" """
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.cartesian;src"" }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Source Pos label"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Src_Pos_Coord"" }"
printf,lun,"    ""FORMAT""      CDF_CHAR     { ""A1"" }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""metadata"" } ."
printf,lun,""
printf,lun,"  ! NRV values follow..."
printf,lun,""
printf,lun,"    [1] = { ""X"" }"
printf,lun,"    [2] = { ""Y"" }"
printf,lun,"    [3] = { ""Z"" }"
printf,lun,""
printf,lun,""
printf,lun,"! Variable          Data      Number                 Record   Dimension"
printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
printf,lun,""
printf,lun,"  ""Polarization""     CDF_INT2      1       1   "+strtrim(string(nf),2)+"        T         T"
printf,lun,""
printf,lun,"  ! VAR_COMPRESSION: None"
printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
printf,lun,"  ! VAR_SPARSERECORDS: None"
printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
printf,lun,"  ! VAR_PADVALUE: 65534"
printf,lun,""
printf,lun,"  ! Attribute       Data"
printf,lun,"  ! Name            Type       Value"
printf,lun,"  ! --------        ----       -----"
printf,lun,""
printf,lun,"    ""UCD""     	CDF_CHAR     { ""meta.id;phys.polarization"" }"
printf,lun,"    ""SCALEMIN""    CDF_INT2     { -1 }"
printf,lun,"    ""SCALEMAX""    CDF_INT2     { +1 }"
printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Polarization of observed sources: North: -1; South: +1"" }"
printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
printf,lun,"    ""DISPLAY_TYPE"""
printf,lun,"                  CDF_CHAR     { ""spectrogram"" }"
printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Polarization"" }"
printf,lun,"    ""FILLVAL""     CDF_INT2    { 32767 }"
printf,lun,"    ""FORMAT""      CDF_CHAR     { ""I5"" }"
printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Polarization"" }"
printf,lun,"    ""UNITS""      CDF_CHAR     { ""Degree of polarization"" }"
printf,lun,"    ""VALIDMIN""    CDF_INT2    { -1 }"
printf,lun,"    ""VALIDMAX""    CDF_INT2    { +1 }"
printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
printf,lun,""
printf,lun,"  ! RV values were not requested."
printf,lun,""
printf,lun,""
if option.srcvis eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""VisibleSources""     CDF_INT2      1       2   "+strtrim(string(nf),2)+" "+strtrim(string(2),2)+"      T        T T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: 65534"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""phys.count;src"" }"
	printf,lun,"    ""SCALEMIN""    CDF_INT2     { -32766 }"
	printf,lun,"    ""SCALEMAX""    CDF_INT2     { +32766 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Polarization and number of visible sources: North: <0; South: >0"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
	printf,lun,"    ""DEPEND_2""    CDF_CHAR     { ""Hemisphere_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""spectrogram"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Number of visible sources"" }"
	printf,lun,"    ""FILLVAL""     CDF_INT2    { 32767 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""I6"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Visible sources"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""Number of visible sources"" }"
	printf,lun,"    ""VALIDMIN""    CDF_INT2    { -32766 }"
	printf,lun,"    ""VALIDMAX""    CDF_INT2    { +32766 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.theta eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""Theta""         CDF_REAL4      1       2   "+strtrim(string(nf),2)+" "+strtrim(string(ns),2)+"      T        T T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.spherical.colat;src;phys.magField"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 90.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Beaming Angle of observed sources"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
	printf,lun,"    ""DEPEND_2""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""spectrogram"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Theta"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Theta"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""deg"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Freq_Label"" }"
	printf,lun,"    ""LABL_PTR_2""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 90.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" }"
	printf,lun,"    ""UNITS""       CDF_CHAR     { ""Degree"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.azimuth eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""Azimuth""       CDF_REAL4      1       2   "+strtrim(string(nf),2)+" "+strtrim(string(ns),2)+"      T        T T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.spherical.azi;src;phys.magField"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 360.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Azimuth of Observer in Source Frame"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
	printf,lun,"    ""DEPEND_2""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""spectrogram"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""Azimuth"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Azimuth"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""deg"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Freq_Label"" }"
	printf,lun,"    ""LABL_PTR_2""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 360.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.cml eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""CML""           CDF_REAL4      1       0              T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.bodyrc.lon;obs.observer"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     {360.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Central Meridian Longitude of Observer"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""CML"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""CML"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""deg"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 360.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.obslatitude eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""ObsLatitude""   CDF_REAL4      1       0              T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.bodyrc.lat;obs.observer"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { -90.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 90.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Latitude of Observer in Planetary Frame"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""ObsLatitude"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""ObsLatitude"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""deg"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { -90.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 90.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.obsdistance eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""ObsDistance""   CDF_REAL4      1       0              T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.distance;obs.observer"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 1.0e+30 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Distance of Observer from Planet"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""ObsDistance"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""ObsDistance"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""Rp"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 1.0e+30 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.obslocaltime eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""ObsLocalTime""  CDF_REAL4      1       0              T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.bodyrc.lon;obs.observer"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 24.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Local Time of Observer in Planetary "" -"
	printf,lun,"                                 ""Frame"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""ObsLocalTime"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""ObsLocalTime"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""hr"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 24.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.srcpos eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""SrcPosition""       CDF_REAL4      1       3   "+strtrim(string(nf),2)+" "+strtrim(string(ns),2)+" 3      T        T T T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""

	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.cartesian;src"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { -100.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { +100.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Location of Source"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
	printf,lun,"    ""DEPEND_2""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DEPEND_3""    CDF_CHAR     { ""Src_Pos_Coord"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""SrcPosition"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""Position"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""Rp"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Freq_Label"" }"
	printf,lun,"    ""LABL_PTR_2""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""LABL_PTR_3""  CDF_CHAR     { ""Src_Pos_Coord"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { -100.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { +100.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.srclongitude eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""SrcLongitude"""
	printf,lun,"                  CDF_REAL4      1       1     "+strtrim(string(ns),2)+"       T         T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""pos.bodyrc.lon;src"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 360.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Equatorial Longitude of Source in Planetary Frame"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""SrcLongitude"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""deg"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""SrcLongitude"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 360.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.srcfreqmax eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""SrcFreqMax"""
	printf,lun,"                  CDF_REAL4      1       1     "+strtrim(string(ns),2)+"       T         T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""stat.max;em.freq;src"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 65.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Maximal Frequency on the Magnetic Flux Tube"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""SrcFreqMax"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""MHz"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""SrcFreqMax"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 65.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.srcfreqmaxCMI eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""SrcFreqMaxCMI"""
	printf,lun,"                  CDF_REAL4      1       1     "+strtrim(string(ns),2)+"       T         T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""stat.max;em.freq;src"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 65.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Maximal Frequency on the Magnetic Flux Tube with the wp/wc<0.1 condition"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""time_series"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""SrcFreqMaxCMI"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""UNITS""      CDF_CHAR     { ""MHz"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""SrcFreqMaxCMI"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 65.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
if option.fp eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""FP""            CDF_REAL4      1       2    "+strtrim(string(nf),2)+" "+strtrim(string(ns),2)+"      T        T T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""em.freq;phys.density;phys.electron"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 45.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Plasma Frequency in the Source"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
	printf,lun,"    ""DEPEND_2""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""spectrogram"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""FP"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""FP"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Freq_Label"" }"
	printf,lun,"    ""LABL_PTR_2""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 45.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	if flog eq 0 then $
		printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" }" $
		else printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""logarithm"" }"
	printf,lun,"    ""UNITS""       CDF_CHAR     { ""MHz"" } ."
	printf,lun,""
	printf,lun,"  ! No values (no records for this variable)."
	printf,lun,""
	printf,lun,""
endif
if option.fc eq 1 then begin
	printf,lun,"! Variable          Data      Number                 Record   Dimension"
	printf,lun,"! Name              Type     Elements  Dims  Sizes  Variance  Variances"
	printf,lun,"! --------          ----     --------  ----  -----  --------  ---------"
	printf,lun,""
	printf,lun,"  ""FC""            CDF_REAL4      1       2   "+strtrim(string(nf),2)+" "+strtrim(string(ns),2)+"      T        T T"
	printf,lun,""
	printf,lun,"  ! VAR_COMPRESSION: None"
	printf,lun,"  ! (Valid compression: None, GZIP.1-9, RLE.0, HUFF.0, AHUFF.0)"
	printf,lun,"  ! VAR_SPARSERECORDS: None"
	printf,lun,"  ! (Valid sparserecords: None, sRecords.PAD, sRecords.PREV)"
	printf,lun,"  ! VAR_PADVALUE: -1.0e+30"
	printf,lun,""
	printf,lun,"  ! Attribute       Data"
	printf,lun,"  ! Name            Type       Value"
	printf,lun,"  ! --------        ----       -----"
	printf,lun,""
	printf,lun,"    ""UCD""     	CDF_CHAR     { ""em.freq;phys.magField;phys.electron"" }"
	printf,lun,"    ""SCALEMIN""     	CDF_REAL4     { 0.0 }"
	printf,lun,"    ""SCALEMAX""     	CDF_REAL4     { 45.0 }"
	printf,lun,"    ""CATDESC""     CDF_CHAR     { ""Cyclotron Frequency in the Source"" }"
	printf,lun,"    ""DEPEND_0""    CDF_CHAR     { ""Epoch"" }"
	printf,lun,"    ""DEPEND_1""    CDF_CHAR     { ""Frequency"" }"
	printf,lun,"    ""DEPEND_2""    CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""DISPLAY_TYPE"""
	printf,lun,"                  CDF_CHAR     { ""spectrogram"" }"
	printf,lun,"    ""FIELDNAM""    CDF_CHAR     { ""FC"" }"
	printf,lun,"    ""FILLVAL""     CDF_REAL4    { -1.0e+31 }"
	printf,lun,"    ""FORMAT""      CDF_CHAR     { ""E12.2"" }"
	printf,lun,"    ""LABLAXIS""    CDF_CHAR     { ""FC"" }"
	printf,lun,"    ""LABL_PTR_1""  CDF_CHAR     { ""Freq_Label"" }"
	printf,lun,"    ""LABL_PTR_2""  CDF_CHAR     { ""Src_ID_Label"" }"
	printf,lun,"    ""VALIDMIN""    CDF_REAL4    { 0.0 }"
	printf,lun,"    ""VALIDMAX""    CDF_REAL4    { 45.0 }"
	printf,lun,"    ""VAR_TYPE""    CDF_CHAR     { ""data"" }"
	if flog eq 0 then $
		printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""linear"" }" $
		else printf,lun,"    ""SCALETYP""    CDF_CHAR     { ""logarithm"" }"
	printf,lun,"    ""UNITS""       CDF_CHAR     { ""MHz"" } ."
	printf,lun,""
	printf,lun,"  ! RV values were not requested."
	printf,lun,""
	printf,lun,""
endif
printf,lun,"#end"

close,lun
free_lun,lun

end
